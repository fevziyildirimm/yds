{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Button,ListGroup}from'react-bootstrap';import'bootstrap/dist/css/bootstrap.min.css';import wordsData from'./words.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SynonymsGame=()=>{const[word,setWord]=useState('');const[synonyms,setSynonyms]=useState([]);const[selectedSynonyms,setSelectedSynonyms]=useState([]);const[selectedWordSynonyms,setSelectedWordSynonyms]=useState([]);const[correctSelectedSynonyms,setCorrectSelectedSynonyms]=useState([]);const[warnSelectedSynonyms,setWarnSelectedSynonyms]=useState([]);const[isCorrect,setIsCorrect]=useState(null);const fetchWordAndSynonymsData=()=>{try{const randomIndex=Math.floor(Math.random()*wordsData.words.length);const{word,synonyms}=wordsData.words[randomIndex];setSelectedWordSynonyms(synonyms);const allOptions=shuffleArray([...synonyms,...getRandomWordsExcept(wordsData.words,word,3)]);setWord(word);setSynonyms(allOptions);setSelectedSynonyms([]);setIsCorrect(null);}catch(error){console.error('Error fetching data:',error);}};const handleSynonymClick=(e,synonym)=>{//console.log(selectedWordSynonyms.includes(synonym));\nconsole.log(correctSelectedSynonyms);if(selectedWordSynonyms.includes(synonym)&&!correctSelectedSynonyms.includes(synonym)){// Eğer zaten seçiliyse, seçimden kaldır\n//  const updatedSelection = selectedSynonyms.filter((selected) => selected !== synonym);\nsetCorrectSelectedSynonyms([...correctSelectedSynonyms,synonym]);}else{// Değilse, seçime ekle\nsetWarnSelectedSynonyms([...warnSelectedSynonyms,synonym]);}};const nextQuestion=()=>{setSelectedSynonyms([]);setCorrectSelectedSynonyms([]);setWarnSelectedSynonyms([]);fetchWordAndSynonymsData();};useEffect(()=>{fetchWordAndSynonymsData();},[]);const shuffleArray=array=>{return array.sort(()=>Math.random()-0.5);};const getRandomWordsExcept=(words,excludedWord,count)=>{console.log(wordsData);const filteredWords=words.filter(word=>word.word!==excludedWord);const randomWords=[];for(let i=0;i<count;i++){const randomIndex=Math.floor(Math.random()*filteredWords.length);const randomSynonyms=Math.floor(Math.random()*filteredWords[randomIndex].synonyms.length);if(randomWords.includes(filteredWords[randomIndex].synonyms[randomSynonyms])){randomSynonyms=Math.floor(Math.random()*filteredWords[randomIndex].synonyms.length);}randomWords.push(filteredWords[randomIndex].synonyms[randomSynonyms]);}console.log(randomWords);return randomWords;};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Card,{style:{width:'18rem',margin:'auto',marginTop:'20px'},children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Yds kelime\"}),/*#__PURE__*/_jsxs(Card.Subtitle,{className:\"mb-2 text-muted\",children:[\"Kelimen \",/*#__PURE__*/_jsxs(\"b\",{className:\"text-info\",children:[\"\\\" \",word.toUpperCase(),\" \\\"\"]})]}),/*#__PURE__*/_jsxs(Card.Subtitle,{className:\"mb-2 text-muted\",children:[\"Bulunacak kelime say\\u0131s\\u0131 \",/*#__PURE__*/_jsxs(\"b\",{className:\"text-info\",children:[\"\\\" \",selectedWordSynonyms.length-correctSelectedSynonyms.length,\" \\\"\"]})]}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:synonyms.map((synonym,index)=>/*#__PURE__*/_jsx(ListGroup.Item,{action:true,variant:correctSelectedSynonyms.includes(synonym)?'success':warnSelectedSynonyms.includes(synonym)?'danger':'light',onClick:e=>handleSynonymClick(e,synonym),children:synonym},index))}),correctSelectedSynonyms.length>=selectedWordSynonyms.length&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:nextQuestion,style:{marginTop:'10px'},children:\"Next Question\"})]})})});};export default SynonymsGame;","map":{"version":3,"names":["React","useState","useEffect","Card","Button","ListGroup","wordsData","jsx","_jsx","jsxs","_jsxs","SynonymsGame","word","setWord","synonyms","setSynonyms","selectedSynonyms","setSelectedSynonyms","selectedWordSynonyms","setSelectedWordSynonyms","correctSelectedSynonyms","setCorrectSelectedSynonyms","warnSelectedSynonyms","setWarnSelectedSynonyms","isCorrect","setIsCorrect","fetchWordAndSynonymsData","randomIndex","Math","floor","random","words","length","allOptions","shuffleArray","getRandomWordsExcept","error","console","handleSynonymClick","e","synonym","log","includes","nextQuestion","array","sort","excludedWord","count","filteredWords","filter","randomWords","i","randomSynonyms","push","className","children","style","width","margin","marginTop","Body","Title","Subtitle","toUpperCase","variant","map","index","Item","action","onClick"],"sources":["/Users/fevziyildirim/Dev/yds/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, ListGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport wordsData from './words.json'; \n\nconst SynonymsGame = () => {\n  const [word, setWord] = useState('');\n  const [synonyms, setSynonyms] = useState([]);\n  const [selectedSynonyms, setSelectedSynonyms] = useState([]);\n  const [selectedWordSynonyms, setSelectedWordSynonyms] = useState([]);\n  const [correctSelectedSynonyms, setCorrectSelectedSynonyms] = useState([]);\n  const [warnSelectedSynonyms, setWarnSelectedSynonyms] = useState([]);\n\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const fetchWordAndSynonymsData = () => {\n    try {\n      const randomIndex = Math.floor(Math.random() * wordsData.words.length);\n      const { word, synonyms } = wordsData.words[randomIndex];\n      setSelectedWordSynonyms(synonyms);\n      const allOptions = shuffleArray([...synonyms,  ...getRandomWordsExcept(wordsData.words, word, 3)]);\n    \n      setWord(word);\n      setSynonyms(allOptions);\n      setSelectedSynonyms([]);\n      setIsCorrect(null);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleSynonymClick = (e,synonym) => {\n    //console.log(selectedWordSynonyms.includes(synonym));\n    console.log(correctSelectedSynonyms);\n    if (selectedWordSynonyms.includes(synonym)&&!correctSelectedSynonyms.includes(synonym)) {\n      // Eğer zaten seçiliyse, seçimden kaldır\n    //  const updatedSelection = selectedSynonyms.filter((selected) => selected !== synonym);\n      setCorrectSelectedSynonyms([...correctSelectedSynonyms, synonym]);\n    } else {\n      // Değilse, seçime ekle\n      setWarnSelectedSynonyms([...warnSelectedSynonyms, synonym]);\n    }\n  };\n\n  const nextQuestion = () => {\n    setSelectedSynonyms([]);\n    setCorrectSelectedSynonyms([]);\n    setWarnSelectedSynonyms([])\n    fetchWordAndSynonymsData();\n  };\n\n  useEffect(() => {\n    fetchWordAndSynonymsData();\n  }, []);\n\n  const shuffleArray = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  const getRandomWordsExcept = (words, excludedWord, count) => {\n    console.log(wordsData);\n    const filteredWords = words.filter((word) => word.word !== excludedWord);\n    const randomWords = [];\n\n    for (let i = 0; i < count; i++) {\n      const randomIndex = Math.floor(Math.random() * filteredWords.length);\n      const randomSynonyms = Math.floor(Math.random() * filteredWords[randomIndex].synonyms.length);\n      if (randomWords.includes(filteredWords[randomIndex].synonyms[randomSynonyms])) {\n        randomSynonyms = Math.floor(Math.random() * filteredWords[randomIndex].synonyms.length);\n      }\n      randomWords.push(filteredWords[randomIndex].synonyms[randomSynonyms]);\n    }\n    console.log(randomWords);\n    return randomWords;\n  };\n\n  return (\n    <div className=\"App\">\n      <Card style={{ width: '18rem', margin: 'auto', marginTop: '20px' }}>\n        <Card.Body>\n          <Card.Title>Yds kelime</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">Kelimen <b className='text-info'>\" {word.toUpperCase()} \"</b></Card.Subtitle>\n          <Card.Subtitle className=\"mb-2 text-muted\">Bulunacak kelime sayısı <b className='text-info'>\" {selectedWordSynonyms.length-correctSelectedSynonyms.length} \"</b></Card.Subtitle>\n          <ListGroup variant=\"flush\">\n            {synonyms.map((synonym, index) => (\n              <ListGroup.Item\n                key={index}\n                action\n                variant={correctSelectedSynonyms.includes(synonym) ? 'success' : warnSelectedSynonyms.includes(synonym)?'danger':'light'}\n                onClick={(e) => handleSynonymClick(e,synonym)}\n\n              >\n                {synonym}\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n          {correctSelectedSynonyms.length >= selectedWordSynonyms.length && (\n            <Button variant=\"primary\" onClick={nextQuestion} style={{ marginTop: '10px' }}>\n              Next Question\n            </Button>\n          )}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default SynonymsGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}