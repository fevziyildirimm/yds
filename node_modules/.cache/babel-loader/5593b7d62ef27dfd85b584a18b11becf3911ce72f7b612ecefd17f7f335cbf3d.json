{"ast":null,"code":"var _jsxFileName = \"/Users/fevziyildirim/Dev/yds/src/Flashcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './flashcard.css';\nimport wordsData from './wordsFlash.json';\nimport { Swipeable, Direction } from 'react-swipy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = () => {\n  _s();\n  var _words$currentWordInd, _words$currentWordInd2;\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  useEffect(() => {\n    setWords(wordsData);\n  }, []);\n  const handleSwipe = direction => {\n    if (direction === Direction.Right && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    } else if (direction === Direction.Left && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(Swipeable, {\n    onSwipe: handleSwipe,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        onClick: handleCardClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flashcard-content ${showAnswer ? 'show-answer' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-front\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_words$currentWordInd = words[currentWordIndex]) === null || _words$currentWordInd === void 0 ? void 0 : _words$currentWordInd.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-back\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_words$currentWordInd2 = words[currentWordIndex]) === null || _words$currentWordInd2 === void 0 ? void 0 : _words$currentWordInd2.turkish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcard, \"fRMDTiexu4QuHWhyUVRufwnZZWg=\");\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useEffect","wordsData","Swipeable","Direction","jsxDEV","_jsxDEV","Flashcard","_s","_words$currentWordInd","_words$currentWordInd2","words","setWords","currentWordIndex","setCurrentWordIndex","showAnswer","setShowAnswer","handleSwipe","direction","Right","length","Left","handleCardClick","onSwipe","children","className","onClick","english","fileName","_jsxFileName","lineNumber","columnNumber","turkish","_c","$RefreshReg$"],"sources":["/Users/fevziyildirim/Dev/yds/src/Flashcard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './flashcard.css';\nimport wordsData from './wordsFlash.json';\nimport { Swipeable, Direction } from 'react-swipy';\n\nconst Flashcard = () => {\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  useEffect(() => {\n    setWords(wordsData);\n  }, []);\n\n  const handleSwipe = (direction) => {\n    if (direction === Direction.Right && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    } else if (direction === Direction.Left && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <Swipeable onSwipe={handleSwipe}>\n      <div className=\"flashcard-container\">\n        <div className=\"flashcard\" onClick={handleCardClick}>\n          <div className={`flashcard-content ${showAnswer ? 'show-answer' : ''}`}>\n            <div className=\"flashcard-front\">\n              <p>{words[currentWordIndex]?.english}</p>\n            </div>\n            <div className=\"flashcard-back\">\n              <p>{words[currentWordIndex]?.turkish}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Swipeable>\n  );\n};\n\nexport default Flashcard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}