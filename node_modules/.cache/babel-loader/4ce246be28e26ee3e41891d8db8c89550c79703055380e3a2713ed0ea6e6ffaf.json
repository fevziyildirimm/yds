{"ast":null,"code":"var _jsxFileName = \"/Users/fevziyildirim/Dev/yds/src/Flashcard.js\",\n  _s = $RefreshSig$();\n// src/components/Flashcard.js\n\nimport React, { useState, useEffect } from 'react';\nimport './flashcard.css';\nimport wordsData from './wordsFlash.json'; // JSON verisini import et\nimport { useSwipeable } from 'react-swipeable'; // react-swipeable'ı import et\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = () => {\n  _s();\n  var _words$currentWordInd, _words$currentWordInd2;\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  useEffect(() => {\n    setWords(wordsData); // JSON verisini state'e set et\n  }, []);\n  const handlers = useSwipeable({\n    onSwipedLeft: () => handleSwipeLeft(),\n    onSwipedRight: () => handleSwipeRight(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n  const handleSwipeRight = () => {\n    if (currentWordIndex < words.length - 1) {\n      setSwipeDirection('right');\n      setTimeout(() => {\n        setCurrentWordIndex(currentWordIndex + 1);\n        setShowAnswer(false);\n        setSwipeDirection(null);\n      }, 400); // Geçişin tamamlanacağı süre\n    }\n  };\n\n  const handleSwipeLeft = () => {\n    if (currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-container\",\n    ...handlers,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flashcard ${showAnswer ? 'show-answer' : ''}`,\n      onClick: handleCardClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-front\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_words$currentWordInd = words[currentWordIndex]) === null || _words$currentWordInd === void 0 ? void 0 : _words$currentWordInd.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-back\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_words$currentWordInd2 = words[currentWordIndex]) === null || _words$currentWordInd2 === void 0 ? void 0 : _words$currentWordInd2.turkish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSwipeLeft,\n        children: \"Sola Kayd\\u0131r\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSwipeRight,\n        children: \"Sa\\u011Fa Kayd\\u0131r\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcard, \"uGCGAcCNjsjFtZecJJWQZaAzMmQ=\", false, function () {\n  return [useSwipeable];\n});\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useEffect","wordsData","useSwipeable","jsxDEV","_jsxDEV","Flashcard","_s","_words$currentWordInd","_words$currentWordInd2","words","setWords","currentWordIndex","setCurrentWordIndex","showAnswer","setShowAnswer","handlers","onSwipedLeft","handleSwipeLeft","onSwipedRight","handleSwipeRight","preventDefaultTouchmoveEvent","trackMouse","length","setSwipeDirection","setTimeout","handleCardClick","className","children","onClick","english","fileName","_jsxFileName","lineNumber","columnNumber","turkish","_c","$RefreshReg$"],"sources":["/Users/fevziyildirim/Dev/yds/src/Flashcard.js"],"sourcesContent":["// src/components/Flashcard.js\n\nimport React, { useState, useEffect } from 'react';\nimport './flashcard.css';\nimport wordsData from './wordsFlash.json'; // JSON verisini import et\nimport { useSwipeable } from 'react-swipeable'; // react-swipeable'ı import et\n\nconst Flashcard = () => {\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  useEffect(() => {\n    setWords(wordsData); // JSON verisini state'e set et\n  }, []);\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => handleSwipeLeft(),\n    onSwipedRight: () => handleSwipeRight(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true,\n  });\n\n  const handleSwipeRight = () => {\n    if (currentWordIndex < words.length - 1) {\n      setSwipeDirection('right');\n      setTimeout(() => {\n        setCurrentWordIndex(currentWordIndex + 1);\n        setShowAnswer(false);\n        setSwipeDirection(null);\n      }, 400); // Geçişin tamamlanacağı süre\n    }\n  };\n\n  const handleSwipeLeft = () => {\n    if (currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <div className=\"flashcard-container\" {...handlers}>\n      <div\n        className={`flashcard ${showAnswer ? 'show-answer' : ''}`}\n        onClick={handleCardClick}\n      >\n        <div className=\"flashcard-content\">\n          <div className=\"flashcard-front\">\n            <p>{words[currentWordIndex]?.english}</p>\n          </div>\n          <div className=\"flashcard-back\">\n            <p>{words[currentWordIndex]?.turkish}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"navigation-buttons\">\n        <button onClick={handleSwipeLeft}>Sola Kaydır</button>\n        <button onClick={handleSwipeRight}>Sağa Kaydır</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Flashcard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}