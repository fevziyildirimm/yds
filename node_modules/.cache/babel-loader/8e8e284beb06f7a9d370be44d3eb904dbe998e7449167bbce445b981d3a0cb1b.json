{"ast":null,"code":"var _jsxFileName = \"/Users/fevziyildirim/Dev/yds/src/Flashcard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Flashcard.css';\nimport wordsData from '../words.json';\nimport { Swipeable } from 'react-swipy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = () => {\n  _s();\n  var _words$currentWordInd, _words$currentWordInd2;\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  useEffect(() => {\n    setWords(wordsData);\n  }, []);\n  const handleSwipe = direction => {\n    if (direction === 'right' && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    } else if (direction === 'left' && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n  return /*#__PURE__*/_jsxDEV(Swipeable, {\n    onSwipe: handleSwipe,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flashcard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcard\",\n        onClick: handleCardClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flashcard-content ${showAnswer ? 'show-answer' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-front\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_words$currentWordInd = words[currentWordIndex]) === null || _words$currentWordInd === void 0 ? void 0 : _words$currentWordInd.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flashcard-back\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_words$currentWordInd2 = words[currentWordIndex]) === null || _words$currentWordInd2 === void 0 ? void 0 : _words$currentWordInd2.turkish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcard, \"fRMDTiexu4QuHWhyUVRufwnZZWg=\");\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useEffect","wordsData","Swipeable","jsxDEV","_jsxDEV","Flashcard","_s","_words$currentWordInd","_words$currentWordInd2","words","setWords","currentWordIndex","setCurrentWordIndex","showAnswer","setShowAnswer","handleSwipe","direction","length","handleCardClick","onSwipe","children","className","onClick","english","fileName","_jsxFileName","lineNumber","columnNumber","turkish","_c","$RefreshReg$"],"sources":["/Users/fevziyildirim/Dev/yds/src/Flashcard.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport './Flashcard.css';\nimport wordsData from '../words.json';\nimport { Swipeable } from 'react-swipy';\n\nconst Flashcard = () => {\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  useEffect(() => {\n    setWords(wordsData);\n  }, []);\n\n  const handleSwipe = (direction) => {\n    if (direction === 'right' && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    } else if (direction === 'left' && currentWordIndex < words.length - 1) {\n      setCurrentWordIndex(currentWordIndex + 1);\n      setShowAnswer(false);\n    }\n  };\n\n  const handleCardClick = () => {\n    setShowAnswer(!showAnswer);\n  };\n\n  return (\n    <Swipeable onSwipe={handleSwipe}>\n      <div className=\"flashcard-container\">\n        <div className=\"flashcard\" onClick={handleCardClick}>\n          <div className={`flashcard-content ${showAnswer ? 'show-answer' : ''}`}>\n            <div className=\"flashcard-front\">\n              <p>{words[currentWordIndex]?.english}</p>\n            </div>\n            <div className=\"flashcard-back\">\n              <p>{words[currentWordIndex]?.turkish}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Swipeable>\n  );\n};\n\nexport default Flashcard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}